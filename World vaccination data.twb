<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0618.0924                               -->
<workbook original-version='18.1' source-build='2024.1.4 (20241.24.0618.0924)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Worldvaccinationdata' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Worldwide Vaccine Data' inline='true' name='federated.0ohzwa601t7kaf1cq0bbp10licup' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Worldwide Vaccine Data' name='textscan.0seunu7178f2hj13lqcv81ktjtoh'>
            <connection class='textscan' directory='C:/Users/madha/Downloads' filename='Worldwide Vaccine Data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0seunu7178f2hj13lqcv81ktjtoh' name='Worldwide Vaccine Data.csv' table='[Worldwide Vaccine Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Doses administered per 100 people' ordinal='1' />
            <column datatype='integer' name='Total doses administered' ordinal='2' />
            <column datatype='real' name='% of population vaccinated' ordinal='3' />
            <column datatype='real' name='% of population fully vaccinated' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0seunu7178f2hj13lqcv81ktjtoh' name='Worldwide Vaccine Data.csv' table='[Worldwide Vaccine Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Doses administered per 100 people' ordinal='1' />
            <column datatype='integer' name='Total doses administered' ordinal='2' />
            <column datatype='real' name='% of population vaccinated' ordinal='3' />
            <column datatype='real' name='% of population fully vaccinated' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Worldwide Vaccine Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Worldwide Vaccine Data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Doses administered per 100 people</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Doses administered per 100 people]</local-name>
            <parent-name>[Worldwide Vaccine Data.csv]</parent-name>
            <remote-alias>Doses administered per 100 people</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total doses administered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total doses administered]</local-name>
            <parent-name>[Worldwide Vaccine Data.csv]</parent-name>
            <remote-alias>Total doses administered</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of population vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of population vaccinated]</local-name>
            <parent-name>[Worldwide Vaccine Data.csv]</parent-name>
            <remote-alias>% of population vaccinated</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of population fully vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of population fully vaccinated]</local-name>
            <parent-name>[Worldwide Vaccine Data.csv]</parent-name>
            <remote-alias>% of population fully vaccinated</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Population Fully Vaccinated' datatype='real' name='[% of population fully vaccinated]' role='measure' type='quantitative' />
      <column caption='% Of Population Vaccinated' datatype='real' name='[% of population vaccinated]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Doses administered per 100 people]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total doses administered]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Worldwide Vaccine Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]' role='measure' type='quantitative' />
      <column-instance column='[% of population fully vaccinated]' derivation='Avg' name='[avg:% of population fully vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of population vaccinated]' derivation='Avg' name='[avg:% of population vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Doses administered per 100 people]' derivation='Avg' name='[avg:Doses administered per 100 people:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total doses administered]' derivation='Avg' name='[avg:Total doses administered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of population fully vaccinated]' derivation='Count' name='[cnt:% of population fully vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Doses administered per 100 people]' derivation='Count' name='[cnt:Doses administered per 100 people:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[% of population fully vaccinated]' derivation='Sum' name='[sum:% of population fully vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of population vaccinated]' derivation='Sum' name='[sum:% of population vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Doses administered per 100 people]' derivation='Sum' name='[sum:Doses administered per 100 people:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total doses administered]' derivation='Sum' name='[sum:Total doses administered:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/madha/AppData/Local/Temp/TableauTemp/#TableauTemp_04aog151fa7flv1ew642y0nkn4zj.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/10/2024 08:32:01 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>Worldwide Vaccine Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Doses administered per 100 people</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Doses administered per 100 people]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Doses administered per 100 people</remote-alias>
              <ordinal>1</ordinal>
              <family>Worldwide Vaccine Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>135</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total doses administered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total doses administered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total doses administered</remote-alias>
              <ordinal>2</ordinal>
              <family>Worldwide Vaccine Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of population vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of population vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of population vaccinated</remote-alias>
              <ordinal>3</ordinal>
              <family>Worldwide Vaccine Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>84</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of population fully vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of population fully vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of population fully vaccinated</remote-alias>
              <ordinal>4</ordinal>
              <family>Worldwide Vaccine Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mainland China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;U.A.E.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;U.K.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Bank &amp; Gaza&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:\% of population fully vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[cnt:\% of population fully vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:\% of population fully vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Total doses administered:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:Total doses administered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Doses administered per 100 people:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[cnt:Doses administered per 100 people:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:Doses administered per 100 people:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:\% of population vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:\% of population vaccinated:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mainland China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;U.A.E.&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;West Bank &amp; Gaza&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Macau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Dominican Rep.&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;U.K.&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Worldwide Vaccine Data.csv' id='Worldwide Vaccine Data.csv_6278986A550F4040B42C45D7657E0EE7'>
            <properties context=''>
              <relation connection='textscan.0seunu7178f2hj13lqcv81ktjtoh' name='Worldwide Vaccine Data.csv' table='[Worldwide Vaccine Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Doses administered per 100 people' ordinal='1' />
                  <column datatype='integer' name='Total doses administered' ordinal='2' />
                  <column datatype='real' name='% of population vaccinated' ordinal='3' />
                  <column datatype='real' name='% of population fully vaccinated' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_C06998DFD67F485A8DCA7BF33B58F7E6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 5' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2_2BD8BB86822E4A42B0889429710CDFA9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 6' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3_A92B96C68E864FB6BCF89281B1402B00]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 7' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Regular'>Vaccination rates per country</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Worldwide Vaccine Data' name='federated.0ohzwa601t7kaf1cq0bbp10licup' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ohzwa601t7kaf1cq0bbp10licup'>
            <column caption='% Of Population Fully Vaccinated' datatype='real' name='[% of population fully vaccinated]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Doses administered per 100 people]' role='measure' type='quantitative' />
            <column-instance column='[Doses administered per 100 people]' derivation='Avg' name='[avg:Doses administered per 100 people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[% of population fully vaccinated]' derivation='Sum' name='[sum:% of population fully vaccinated:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Action (Country)]'>
            <groupfilter function='member' level='[Country]' member='&quot;Austria&quot;' user:ui-action-filter='[Action2_2BD8BB86822E4A42B0889429710CDFA9]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0ohzwa601t7kaf1cq0bbp10licup].[Latitude (generated)]</column>
            <column>[federated.0ohzwa601t7kaf1cq0bbp10licup].[Longitude (generated)]</column>
            <column>[federated.0ohzwa601t7kaf1cq0bbp10licup].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Longitude (generated)]' field-type='quantitative' max='25381887.789967239' min='-10051575.438011123' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Latitude (generated)]' field-type='quantitative' max='11412113.594380613' min='-7653296.2219193196' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:% of population fully vaccinated:qk]' palette='orange_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:% of population fully vaccinated:qk]' />
              <lod column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]' />
              <tooltip column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Doses administered per 100 people:qk]' />
              <geometry column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ohzwa601t7kaf1cq0bbp10licup].[Latitude (generated)]</rows>
        <cols>[federated.0ohzwa601t7kaf1cq0bbp10licup].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C37D292E-9362-43C8-B55E-953ECEC35044}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Vaccination Progress Comparison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Worldwide Vaccine Data' name='federated.0ohzwa601t7kaf1cq0bbp10licup' />
          </datasources>
          <datasource-dependencies datasource='federated.0ohzwa601t7kaf1cq0bbp10licup'>
            <column caption='% Of Population Fully Vaccinated' datatype='real' name='[% of population fully vaccinated]' role='measure' type='quantitative' />
            <column caption='% Of Population Vaccinated' datatype='real' name='[% of population vaccinated]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[% of population fully vaccinated]' derivation='Avg' name='[avg:% of population fully vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% of population vaccinated]' derivation='Avg' name='[avg:% of population vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_C06998DFD67F485A8DCA7BF33B58F7E6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ohzwa601t7kaf1cq0bbp10licup].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population vaccinated:qk]' scope='rows' value='Vaccinated(%)' />
            <format attr='title' class='0' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]' scope='rows' value='Fully Vaccinated(%)' />
            <encoding attr='space' class='0' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population vaccinated:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]' />
              <color column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk] + [federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population vaccinated:qk])</rows>
        <cols>[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{32CF38D9-E4A9-42DC-B58E-917563A84917}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Vaccination Distribution vs. Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Worldwide Vaccine Data' name='federated.0ohzwa601t7kaf1cq0bbp10licup' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ohzwa601t7kaf1cq0bbp10licup'>
            <column caption='% Of Population Fully Vaccinated' datatype='real' name='[% of population fully vaccinated]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Doses administered per 100 people]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total doses administered]' role='measure' type='quantitative' />
            <column-instance column='[% of population fully vaccinated]' derivation='Avg' name='[avg:% of population fully vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Doses administered per 100 people]' derivation='Avg' name='[avg:Doses administered per 100 people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total doses administered]' derivation='Avg' name='[avg:Total doses administered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_C06998DFD67F485A8DCA7BF33B58F7E6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ohzwa601t7kaf1cq0bbp10licup].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]' scope='rows' value='% Of Population Fully Vaccinated' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]' />
              <size column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Doses administered per 100 people:qk]' />
              <lod column='[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]</rows>
        <cols>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Total doses administered:qk]</cols>
      </table>
      <simple-id uuid='{0F76D6C7-F466-4B21-B169-ABBBBB30E2A0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='1220' minheight='560' minwidth='1220' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97946' id='7' param='horz' type-v2='layout-flow' w='98688' x='656' y='1027'>
            <zone h='97946' id='5' type-v2='layout-basic' w='80901' x='656' y='1027'>
              <zone h='48970' id='3' name='Sheet 5' w='48409' x='656' y='1027'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48976' id='9' name='Sheet 6' w='80901' x='656' y='49997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48970' id='10' name='Sheet 7' w='32492' x='49065' y='1027'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='217' h='97946' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='17787' x='81557' y='1027'>
              <zone h='10911' id='8' name='Sheet 5' pane-specification-id='0' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:% of population fully vaccinated:qk]' type-v2='color' w='17787' x='81557' y='1027'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20924' id='11' name='Sheet 7' pane-specification-id='0' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Doses administered per 100 people:qk]' type-v2='size' w='17787' x='81557' y='11938'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#dfe7e8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97946' id='20' param='vert' type-v2='layout-flow' w='98688' x='656' y='1027'>
                <zone fixed-size='280' h='48970' id='3' is-fixed='true' name='Sheet 5' w='48409' x='656' y='1027'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10911' id='8' name='Sheet 5' pane-specification-id='0' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:% of population fully vaccinated:qk]' type-v2='color' w='17787' x='81557' y='1027'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48970' id='10' is-fixed='true' name='Sheet 7' w='32492' x='49065' y='1027'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20924' id='11' name='Sheet 7' pane-specification-id='0' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Doses administered per 100 people:qk]' type-v2='size' w='17787' x='81557' y='11938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48976' id='9' is-fixed='true' name='Sheet 6' w='80901' x='656' y='49997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#dfe7e8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{19F72315-F142-4CE6-A406-B11EE6846094}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[sum:% of population fully vaccinated:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2E2E49F9-4AB4-4A73-99E9-E5C08A6175D0}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]&#10;[federated.0ohzwa601t7kaf1cq0bbp10licup].[:Measure Names]' type='color' />
            <card pane-specification-id='10' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[:Measure Names]</field>
            <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC38023E-D879-40BB-B00D-CC51C00A49A0}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Doses administered per 100 people:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]</field>
            <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{830103BE-69EB-43A5-ABD8-68A5536CC142}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Total doses administered:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:% of population fully vaccinated:qk]</field>
                    <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Doses administered per 100 people:qk]</field>
                    <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[avg:Total doses administered:qk]</field>
                    <field>[federated.0ohzwa601t7kaf1cq0bbp10licup].[none:Country:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>77.0</value>
                  <value>228.0</value>
                  <value>20263306.0</value>
                  <value>&quot;Austria&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <device-preview visible='true' />
      <simple-id uuid='{21A71BE7-0621-4274-8FB0-C6083FC380B8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      bNvVQJXVzTNrGyl2NZOYdRRfuPxiXnv+SVat2Uxs2nwu+dBiVq58gm4txLWfu4DtDa0smV/L
      vXffRWemxLmXfJrj50X4vzseBa9K3gzwza9/maB3TymWaJzZs2cza+YMfA8sp3XrGzy/tpVs
      b46/vfIzLL/3dzR15zj7I5dx0jEL+fMj97OzNUWiKskRx5zIro2vYmsWi067iEB+F0/95S3m
      LzqRT170YZ546B427e7k6KWn8dGzl/Lr228nqwnO/sjH+OCShYDgDw8/ybe+/e/E/B4+/9Vr
      2LStBVPLc+/vfktXVuOCSy/nyBlefve7x7EooXliHD0nybqN2zjzosuZG0qx8pVNFFIdzFt8
      Mp+6+GzefuVZXnlzHb74dL5y5ef44x9/i1fTOeLk89m+bRvHLzqSu+64nXTJ4swLLuOkxfN4
      8N67aezMcPq5l3Dq8fO46//uxMZDb8Hkq9/4OvExLmDvNwzSAc4/bREvvb2Td19+nlPO+Qi2
      qVF35Alc9ZUvs/qlZ8mmmnnytZ1cd/0N1CUUWndv5NWtWa6/4XqqfRqqWmTdlnpSHQ106xG+
      fvV19NSvomjYJGrn89WvXkXLprcIzDicZcvO5LqrvgR6hvXbG3n8nttZeMZlXHfNN3jgd3dg
      mQVWb2zkyn/4Gkcki6xv7heT6te+wY9//GNuueUWzrnwU2S6Gnl7eydf/vvP89qKe0kefRbX
      X/sNnn7otzTvWM/OTIyvfu0qOhrqOfaYo3n68ZWcfeln+cD8GPc9sYqrr70eu3UNm9u7WL22
      mWuvu47Tlx5Npnkz2dBcrr36Gyyc1X9CpiE8xPx78qP9UY5dciQr77mDI8/8BNd+4yoe/O2v
      UbUc67e183dXfR1v7wai8z/I9V+/khWPP06mqwkzVsd1199A57qX2N2dJ5ScyVe+ehV6w2Ya
      0kWee+IxzvjoZzhxyQLWrltHrm0rKf8srr3mmxw2eyqvPXYPgYVncP111/DMA/dQtEzeWL2B
      z1/5D5x1WJLXN7TsBxI6tDEoFmjJ6efz/B0PElI0/u6iWqxSitdeeprN0+swTUG+p5Vk3WF4
      PAqnn30OO1c/yfTDjsKjeDhr2bkY6f6tet7CBXgUhWDIh21ZrHnrFTZt2UJJtbAqpLRubc7y
      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
      Lcl79LgP/AGl3HVQeffDsQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      Mhv6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
